{"ast":null,"code":"import _classCallCheck from \"/Users/alexandersuarez/coding/projects/react_friend_finder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexandersuarez/coding/projects/react_friend_finder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexandersuarez/coding/projects/react_friend_finder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexandersuarez/coding/projects/react_friend_finder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexandersuarez/coding/projects/react_friend_finder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexandersuarez/coding/projects/react_friend_finder/client/src/components/Survey/SurveyContainer.js\";\nimport React, { Component } from \"react\";\nimport SurveyComponent from \"./SurveyComponent\";\n\nvar SurveyContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SurveyContainer, _Component);\n\n  function SurveyContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SurveyContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SurveyContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      answers: []\n    };\n\n    _this.handleChange = function (event) {\n      // Destructuring event.target\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value; // 1. Need to set state to take in previous state\n      // 2. Need to set the new value to the [name] : value\n      // 3. Update the array\n      // 4. Log the new array\n      // 5. Not sure if it is this function or another one but must convert the array into an array of numbers\n\n      _this.setState(function (prevState) {\n        return {\n          answers: prevState.answers\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SurveyContainer, [{\n    key: \"handleClick\",\n    value: function handleClick() {// 1. Takes the new array and saves it to the database\n      // 2. Then takes the array and compares it to the \n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(SurveyComponent, {\n        handleChange: this.handleChange,\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, console.log(this.state.answers)));\n    }\n  }]);\n\n  return SurveyContainer;\n}(Component);\n\nexport default SurveyContainer;","map":{"version":3,"sources":["/Users/alexandersuarez/coding/projects/react_friend_finder/client/src/components/Survey/SurveyContainer.js"],"names":["React","Component","SurveyComponent","SurveyContainer","state","answers","handleChange","event","target","name","value","setState","prevState","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;IAEMC,e;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE;AADL,K;;UAIRC,Y,GAAe,UAACC,KAAD,EAAW;AACtB;AADsB,0BAEEA,KAAK,CAACC,MAFR;AAAA,UAEdC,IAFc,iBAEdA,IAFc;AAAA,UAERC,KAFQ,iBAERA,KAFQ,EAGtB;AACA;AACA;AACA;AACA;;AAGA,YAAKC,QAAL,CAAc,UAAAC,SAAS,EAAI;AACzB,eAAO;AACHP,UAAAA,OAAO,EAAEO,SAAS,CAACP;AADhB,SAAP;AAID,OALD;AASH,K;;;;;;;kCAEa,CACV;AACA;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,eAAD;AACI,QAAA,YAAY,EAAE,KAAKC,YADvB;AAEI,QAAA,IAAI,EAAE,KAAKF,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIS,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,OAAvB,CAAJ,CALJ,CADJ;AASH;;;;EAzCyBJ,S;;AA6C9B,eAAeE,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport SurveyComponent from \"./SurveyComponent\";\n\nclass SurveyContainer extends Component {\n    state = {\n        answers: []\n    }\n\n    handleChange = (event) => {\n        // Destructuring event.target\n        const { name, value } = event.target\n        // 1. Need to set state to take in previous state\n        // 2. Need to set the new value to the [name] : value\n        // 3. Update the array\n        // 4. Log the new array\n        // 5. Not sure if it is this function or another one but must convert the array into an array of numbers\n    \n\n        this.setState(prevState => {\n          return {\n              answers: prevState.answers\n          }\n\n        })\n\n\n\n    }\n\n    handleClick() {\n        // 1. Takes the new array and saves it to the database\n        // 2. Then takes the array and compares it to the \n    }\n\n    render() {\n        return (\n            <div>\n                <SurveyComponent\n                    handleChange={this.handleChange}\n                    data={this.state}\n                />\n                <p>{console.log(this.state.answers)}</p>\n            </div>\n        )\n    }\n}\n\n\nexport default SurveyContainer;\n\n\n"]},"metadata":{},"sourceType":"module"}